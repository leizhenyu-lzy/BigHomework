Q: 我们到底是仿真还是数字孪生呢
A：
这是个涉及到工作方向的重要问题。关于综设要求，最准确的说法是一个“拟真”系统或“模拟”系统。这里先区分几个概念：

控制学科所讲的仿真：通常是已知模型和算法，例如已知控制模型、已知电机模型、已知某种控制算法，然后在matlab里面把它搭出来，注意此时的仿真本质上是用基于计算机的数值离散化和微分方程求解器进行数值计算，或者说，本质上是人干的求解过程现在用计算机来进行“计算”，做这件事的价值主要在于有些计算靠人来做不好算，所以让机器帮忙算，但是在模型准确可知、算法准确可知情况下，不论是人算还是机算（这里的算主要是数值计算，即解方程类型的计算），所得结果应该是一致的，如果不一致说明人算错或机器程序写错了，或者是认为模拟点干扰放进去，看看系统表现，因为加干扰看表现这事也是个人算比较麻烦的事。所以对许多控制系统仿真而言，如果理论分析到位，仿真的结果必须也应该符合理论分析的结果，仿真的价值一是验算和确认理论分析结果的正确性，二是增加学习者研究者直观的认识，三是处理下加了干扰后人算起来比较麻烦的挑战。这三点是完全站在实际应用角度来看的。如果你能准确算出来，不做仿真也罢。考察此类仿真好不好的标准是：目标对象模型建得准不准、仿真过程计算得快不快、所得解的质量高不高（如果内嵌了优化算法的话）。

拟真或模拟：对许多复杂系统，我们无法从宏观上准确描述，但又要开展研究，所以用写计算机程序的办法模拟系统的运行过程，主要是对系统进行分解，然后重点模拟和实现微观上各个模块之间的交互机制，例如股市的模拟、供应链生态的模拟、国际政治关系的模拟、作战模拟等等，因为不大可能针对这样的系统在整体层面给与精准的建模，但是微观上的许多交互还是可以被抽象建模和描述的。所以对这类程序，我们应称之为拟真或模拟。但是在英文里只有仿真 simulation 这一个词，所以大家习惯上也不再做严格区分，统称为仿真，但是拟真/模拟和前面所讲的控制系统仿真是有很大区别的，拟真/模拟系统的模型通常无法准确可知，尤其是不大可能写出全局模型，而控制系统仿真一般都要求已知模型，如果模型不可知，这控制系统仿真大都做不下去或做不深入（这里还要区分一下：模型可以有不确定性，可以用概率随机统计等数学工具描述，但是仍然应归入模型已知范畴）。考察拟真/模拟系统好不好的标准是：最终系统的行为和真实物理系统是否表现一致，所得结果是否可信（是否与实际实验或数据采集的结果一致），如果不一致，说明我们可能漏了一些因素没考虑（建模不到位），应该重新分析系统的机理并凝练其机制放入模拟程序。

物理在环的仿真：在完整的仿真系统中，有一部分环节是采用真实的物理系统的一部分模块来搭建，实物仿真子系统和计算机仿真子系统要合并在一起，才是一个完整的仿真，二者不可分离，例如汽车长的车辆性能仿真中常用到转鼓设备，可基于转鼓设备和计算机设备开发物理在环的仿真。物理在环仿真的优势是所得数据会更接近于最终版的物理设备表现，这是其价值所在，此外，尽管业界所使用的各种模型都是真实物理设备/物理对象的抽象，甚至是公认的一些公知模型，但是其中仍然不可避免地涉及到对物理对象的简化。这种简化是实际中无法避免的，因为有很多因素是人们无法提前预知的，要不然人们也就没必要去做物理实验了。显然，这不是单纯靠数学建模和数学方法能解决的。

数字孪生：跟物理在环仿真类似，整个系统中也包含物理实体，但是与物理在环本质不同的是，数字孪生系统中，物理本体（如一辆真正的无人车RoboTaxi）和其在数字世界中的孪生体（数字车Digital Vehicle）是可以分离、两套系统是可以完全独立运行的。例如我们要预测某个城市某条道路上出了一起车祸后，10分钟之后整个区域交通状况如何，在数字世界（Digital world）中所有的车与物理世界/真实世界中的所有的车状态完全一致的情况下，就可以通过完全在数字世界中驱动这些数字车行进和演化，演化10分钟，再来观察数字世界中的交通状况，并以其作为对真实世界的预测。战场兵棋推演、经济状况预测都可以用这个办法。数字孪生的关键技术就是物理对象和数字对象的强实时强及时状态同步，这有赖物联网技术的进步（网络是很实用的技术，是有必要掌握一些的，对没修过物联网课的同学，通过本次训练拎一拎）。在给大家的任务中，我们假定物理世界和数字世界二者可以做到精准同步（这在现实上是不可能的并由此引发许多实际控制问题），至少在2022年不考虑状态同步所需的时延问题（delay）。此外，仍以交通网络和robotaxi为例，当数字世界中所有数字车digital vechile可以精准的反映物理世界中真实车（physical vehicle）的时候，我们完全可以基于数字世界自己的数据进行全网的优化调度，实现人员或货物的优化运输（2022年只简化要求到每辆车自己规划路线，没有要求全网级别的优化调度），同时将基于路径规划的结果去指挥数字车的行驶和物理车的行驶。这是数字世界的另一个用途——可以直接指挥物理世界，相当于是城市的智能交通大脑。

有了以上概念辨析，我们再来回答上面的问题：

1） 
本综设课题在整体和系统层级更接近一个“拟真/模拟“系统，绝非简单的控制系统仿真概念。它是在模拟一个RoboTaxi人员物资运输系统的基础上，把控制的算法、AI的算法加入进去，达成对自主运动体控制、智能驾驶等相关领域最基本技术的理解与掌握。

2）
本综设课题在局部上包含控制系统系统仿真。基于Matlab的车中包含了控制系统仿真，因为是基于抽象出来的车模型和控制算法。为了简化Matlab程序，车的路径规划环节还是交给了服务端的数字世界来进行优化（理论上，服务端可以获知每个位置处的状态，例如对动态障碍物当前位置的获知，所以交给服务端做就很容易解决不同车碰撞问题，不过2022年对此做了简化，不要求一定解决不同车的碰撞问题，该撞过去就撞过去），而Matlab仿真车收到的是来自服务端路径规划算法的输出，然后把规划的路径转换为一条条更加局部的控制目标设置，并经由控制算法驱动车行进（基于车的物理模型）。2022年事实上在这个问题上并未过高要求，能做个PID算法控制车辆行进的仿真即可。车辆传感器（如探测前方道路和环境）的功能可以调用服务端API实现，服务端把该Matlab车在数字世界中的孪生数字车前方一小片地图的数据发给matlab车，来代替前向传感器探测输出。而且因为可以采用PID控制，所以对车辆的控制模型要求不高，几乎接近于无模型控制了（这样对同学们是最简单的）。从功能上，只要能控好速度和转向，即使是用简单的乒乓控制和用规则表示，也能把车开起来。但是仍然要注意，控制模型和物理模型是不同的，控制模型是给控制算法用的，物理模型是描述车运动的规律（运动学规律与动力学规律。对今年给你们的任务而言，有运动学规律应该足够了），例如车有最大加速度限制、有最高速度限制、拐弯时的半径与速度有关系，以及物理实体车的速度控制只有加速减速两个选择（对应踩油门、收油门）没有直接的匀速功能，匀速是控制的效果，不是车本体支持的，这些陈述都是属于车的物理模型陈述。所谓的游戏引擎中的物理引擎干的就是这些事，例如许多赛车游戏，可以设置很多参数，这些参数经常来自实际的的车。

而且，我们要求的matlab车需要与数字世界双向通信。即全车仿真而不是仅有控制算法仿真。具体包括：1）matlab 车需要实时向数字世界上报自身状态，具体包括位置、角度、速度、加速度。2）服务端数字世界根据车辆状态特别是位置数据进行动态规划，也许1秒进行一次，也许5秒进行一次，取决于大家自己的设置；3）数字世界规划的结果更新给车，便于车进行调整，但是车在调整的时候要考虑物理模型约束，比如速度要从0调整到10，但是加速度只有2，那每秒钟只能给速度加2，不可能立刻调整到位，这里有点delay是正常的，因为这点delay的存在，所以matlab模拟车的行进轨迹不大可能跟规划路径保持严格一致。这时候控制算法的效果就可以体现出来了。这一步考察的结果主要是对比有无控制算法的表现。包括PID中如果少掉一个量后会怎样。顺便的，我们今后称matlab仿真程序为模拟车，以和物理车、数字世界中的数字车在术语上相区分，一是因为该程序要模拟全车行为，控制算法仿真只是其中一个组成模块而已，二是站在服务端角度看，连上来的是一辆matlab模拟车，还是一辆真实的物理车，并无区分（也没有必要区分）。

对matlab模拟车考察的标准是：1）与基准比较，看加了控制算法后表现如何，自己定义技术指标；2）看看该模拟车能否用较短的时间达到目的地，毕竟在matlab模拟车中，比较容易表达一些复杂的车模型，matlab或simulink还是可以帮助我们简化很多计算任务，而数字世界中的数字车，我相信绝大多数同学都不会把模型搞得很复杂，毕竟搞复杂了之后，牵扯到在java或c++这些语言中做一些数值求解，这件事情不是我们今年的重点。而且今后也大概率不是重点。遇到这种需求，还是上matlab，我们宁肯为每一个数字车匹配一个matlab模拟车，而把这些计算推到matlab程序中计算，且将车状态同步给数字车。从最终模拟的精准性上来说并未损失。

3）
基于智能手机硬件平台的车模拟程序是今年大家在缺少硬件实体车情况下的替代方案。理想情况下，应该给大家一辆真实的物理小车，这辆小车跟matlab模拟车程序一样，与数字世界存在状态上报和规划指令下达并执行两个方向的数据通信。

在基于智能手机硬件平台的情况，要做指挥有点小麻烦，因为手持智能手机的人是一个不精确的执行单元，所以今年不要求指挥手机车运动，而是重点放在状态上报和融合推断上，毕竟由加速度计、陀螺仪融合出位置、角度数据是实际无人车系统中的一个关键技术点，顺便把信号处理、传感器数据融合的这个要求也拎起来。而在matlab模拟车、数字世界中的数字车中，我们都是想当然的认为车的location和角度数据可精确获取（服务端数字程序中确实是这样），但实际中并非如此。所以对自动化专业而言，这里的融合作为一个重要的关键技术点。对人工智能专业而言，则结合AI专业未来实际工程应用，重点把图像处理、建地图这件事拎起来，建地图这件事可简单可复杂。毕竟在数字世界模拟中，我们地图是精准可知，但实际上，地图上的障碍物分布如何，是RoboTaxi在行进过程中探索出来的，不是预先可知的。（智能手机模拟车也可以像matlab车那样，接收来自数字世界的路径规划动态输出并执行，具体做法是在UI界面上显示向前向后向左向右，并且人必须遵照执行，但是感觉这对大家训练和提升有限，所以也就算了。能做好传感器数据融合也行，最简单的估计办法是只用加速度传感器去估计位姿，但希望是加速度和陀螺仪融合。）

对手机模拟车（为了与matlab模拟车相区分，我们可称之为物理车，即跟一辆真实的实体小车同样对待），考察工作的标准是：人拿着手机走一圈，把算法推算出来的位置点连接起来，看看这条轨迹曲线能否闭合。能闭合说明位置估计比较准确，曲线不能闭合（但人回到了原点）说明位置估计算法欠佳。



